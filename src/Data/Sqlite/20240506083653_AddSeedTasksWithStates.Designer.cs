// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using TaskTitan.Data;

#nullable disable

namespace Data.Sqlite
{
    [DbContext(typeof(TaskTitanDbContext))]
    [Migration("20240506083653_AddSeedTasksWithStates")]
    partial class AddSeedTasksWithStates
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "8.0.4");

            modelBuilder.Entity("TaskTitan.Core.TTask", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("TEXT");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("State")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("tasks", (string)null);

                    b.HasData(
                        new
                        {
                            Id = "TbNdVCnL",
                            CreatedAt = new DateTime(2024, 5, 6, 8, 36, 53, 13, DateTimeKind.Utc).AddTicks(3721),
                            Description = "Basic task",
                            State = "Pending"
                        },
                        new
                        {
                            Id = "YHwj0rTr",
                            CreatedAt = new DateTime(2024, 5, 6, 8, 36, 53, 13, DateTimeKind.Utc).AddTicks(3729),
                            Description = "Wash the dog",
                            State = "Pending"
                        },
                        new
                        {
                            Id = "WDvXCLgN",
                            CreatedAt = new DateTime(2024, 5, 6, 8, 36, 53, 13, DateTimeKind.Utc).AddTicks(3737),
                            Description = "Feed the cats",
                            State = "Pending"
                        },
                        new
                        {
                            Id = "L2GxtC0R",
                            CreatedAt = new DateTime(2024, 5, 6, 8, 36, 53, 13, DateTimeKind.Utc).AddTicks(3676),
                            Description = "Started task",
                            State = "Started"
                        },
                        new
                        {
                            Id = "aI50VPJR",
                            CreatedAt = new DateTime(2024, 5, 6, 8, 36, 53, 13, DateTimeKind.Utc).AddTicks(3690),
                            Description = "Completed task",
                            State = "Done"
                        });
                });
#pragma warning restore 612, 618
        }
    }
}
